<!DOCTYPE html>
<html>
<head>
  <title>Patrick Fisher Resum√©</title>
<link rel=stylesheet href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
<link rel=stylesheet href="https://pfisherok.github.io/resumestyle.css">


</head>

<body>

<header class="container-flex mynav">
	<div class="row">
     <nav class="col-xs-12">
      <p><a href="project.htm">Project</a></p>
      <p><a href="resume.htm">Resume</a></p>
      <p><a href="prime_mockup.pdf" target="new">Compare</a></p>
      <p class="mynav-right">Content &copyPatrick Fisher</p>
  </nav>
      <!-- <nav class="mynav-right"> -->
      	<!-- <p style='color:#B3B6B7; font-weight:bold'>&copyPatrick Fisher</p> -->
    <!-- </nav> -->
  </div>
</header>

<!-- Start Value Entry -->
<div class="container-fluid">
<div class="project">
  <p>I began with a printed copy of my resume. I looked at it, from the perspective of the exercise on codeacademy.com, prime's "technical" component of the application site recommended. I dissected my resume based on its very clean and grid-oriented layout. Bootstrap seemed to be fairly easily applied to this.

<p><img src="https://cloud.githubusercontent.com/assets/26167646/23595035/469a4b6e-01e4-11e7-826d-198218f3ebb7.png" width="300px"></p>

<p>I had never used nor seen the bootstrap framework: I knew nothing of it. I wanted to include aspects of it from the codeacademy courses earlier in the day. I also decided to establish a secondary css file for simple formatting I may not yet be able to grasp (or find) in the bootstrap codebase. This--if no some javascript--would allow me, if time permitted, to look at using roll-down formatting for some of the more detailed aspects of the resume I would submit. In fact, it came in very handy so I could more easily manage modified classes from bootstrap.</p>

<p>Rather than deal with gitbub's potential delays in styling and figuring on multiple, frequent changes, I decided to work locally using sublime text and a browser. In sublime I created an index file and a special css file. My plan was to get the site fairly tight then transfer its contents to github. Although I wouldn't have lots of iterations to go through, I would have a more responsive system for checking my work (and I was up against a tight deadline for the application to prime!).

<p><img src="https://drive.google.com/open?id=0B8u0dkXClV6MeWR2bEhCWlhNbEk" width="300px"></p>

<p>I decided on a 3/9 format for the main content. Outside bootstrap, I created some basic classes, etc., to handle the more mundane stuff. As that came together I needed to get all my content from Word, where my resume lives, to sublime text without all the bloat of anything other than "plain text". I also needed to go out to the web for a hexadecimal color reference chart to use for backgrounds.

I set up an excel sheet into which I could paste my laundry lists of skills and accomplishments. The I added in separate columns the list item tags and di a little cleanup. This made code ready to quickly drop into sublime and check.

<p><img src="https://drive.google.com/open?id=0B8u0dkXClV6MOTRWc3BLa2F2TjQ" width="300px">  <img src="https://drive.google.com/open?id=0B8u0dkXClV6MUnY5ZDllVmJZTms" width="300px"></p>

<p>I wanted to include on the online resume the ability to compare the html/css-based content to the "regular" pdf or paper-based copy I often need to use. So I decided upon a nav menu for this and to include a spot for this narrative with pics. Of course, I needed a way to get back to the resume from any of the other pages so I ended up with a small series of pages. This may be too involved or annoying for the application reviewers. I may have needed to rethink that part but figured I could come back to it. First, the priority was getting the basic format and all the content onboarded and styled.</p>

<p>Once this was all completed, I looked at using jQuery for the rolldown feature I envisioned for the details of my job history. This was okay but I wanted the buttons to only show contextully (if down, show only up, and vice-versa) I then realized I also needed to account for the possibility the viewer may not have js enable on the local browser. I ended up building a series of test pages so I'd have a simpler time making it work and then applying that to the "real" resume. I found an <a href="http://rickyrosario.com/blog/the-opposite-of-the-noscript-element-yesscript-scriptonly/" target="blank">excellent resource</a> for doing this at http://rickyrosario.com/blog/the-opposite-of-the-noscript-element-yesscript-scriptonly/. This added about 3 hours but I still managed to come in at about the max suggested: 10 hours. This is how I learn...

<p><img src="https://drive.google.com/open?id=0B8u0dkXClV6MeFoyVXI0TmRGVVU" width="300px"></p>

https://cloud.githubusercontent.com/assets/26167646/23595035/469a4b6e-01e4-11e7-826d-198218f3ebb7.png
https://cloud.githubusercontent.com/assets/26167646/23595036/46a699aa-01e4-11e7-8992-2b82ed08920e.PNG
https://cloud.githubusercontent.com/assets/26167646/23595038/46afddbc-01e4-11e7-8ff3-7ffb1f24a1db.PNG
https://cloud.githubusercontent.com/assets/26167646/23595037/46af357e-01e4-11e7-9e61-4889b0df7bff.PNG
https://cloud.githubusercontent.com/assets/26167646/23595039/46b04aae-01e4-11e7-9fbb-a32ff87b8337.PNG

</div>
</body>
</html>
